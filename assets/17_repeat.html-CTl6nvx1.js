import{_ as n}from"./plugin-vue_export-helper-DlAUqK2U.js";import{o as a,c as s,e as t}from"./app-DgObMfaV.js";const e={},p=t(`<h2 id="一、题意" tabindex="-1"><a class="header-anchor" href="#一、题意"><span>一、题意</span></a></h2><p>使用JS实现一个repeat方法</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">repeat</span> <span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> times<span class="token punctuation">,</span> wait</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token comment">//...</span>
<span class="token punctuation">}</span>
<span class="token keyword">const</span> repeatFunc <span class="token operator">=</span> <span class="token function">repeat</span><span class="token punctuation">(</span>alert<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>调用这个 <code>repeatedFunc(&quot;hellworld&quot;)</code>，会alert4次 <code>helloworld</code>, 每次间隔3秒</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> repeatedFunc <span class="token operator">=</span> <span class="token function">repeat</span><span class="token punctuation">(</span>alert<span class="token punctuation">,</span> <span class="token number">4</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">)</span>
<span class="token function">repeatedFunc</span><span class="token punctuation">(</span><span class="token string">&quot;hellworld&quot;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="二、解法" tabindex="-1"><a class="header-anchor" href="#二、解法"><span>二、解法</span></a></h2><blockquote><p>解答此题的关键，在于使用<code>await</code>语法，结合<code>event loop</code>的机制，对执行语句进行阻塞。 如果单单靠<code>setTimeout</code>，是无法做到<code>每次间隔3秒</code>的要求。</p></blockquote><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">function</span> <span class="token function">repeat</span> <span class="token punctuation">(</span><span class="token parameter">func<span class="token punctuation">,</span> times<span class="token punctuation">,</span> wait</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token parameter">word</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token keyword">let</span> i <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span> i <span class="token operator">&lt;</span> times<span class="token punctuation">;</span> i<span class="token operator">++</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
            <span class="token keyword">await</span> <span class="token function">sleep</span><span class="token punctuation">(</span>wait<span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token function">func</span><span class="token punctuation">(</span>word<span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>

<span class="token keyword">function</span> <span class="token function">sleep</span><span class="token punctuation">(</span><span class="token parameter">time</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">Promise</span><span class="token punctuation">(</span><span class="token parameter">resolve</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token function">setTimeout</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token function">resolve</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span><span class="token punctuation">,</span> time<span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,8),o=[p];function c(l,i){return a(),s("div",null,o)}const d=n(e,[["render",c],["__file","17_repeat.html.vue"]]),k=JSON.parse('{"path":"/algorithm/method_mock/17_repeat.html","title":"实现一个repeat方法","lang":"zh-CN","frontmatter":{"title":"实现一个repeat方法","description":"一、题意 使用JS实现一个repeat方法 调用这个 repeatedFunc(\\"hellworld\\")，会alert4次 helloworld, 每次间隔3秒 二、解法 解答此题的关键，在于使用await语法，结合event loop的机制，对执行语句进行阻塞。 如果单单靠setTimeout，是无法做到每次间隔3秒的要求。","head":[["meta",{"property":"og:url","content":"https://github.com/dcblog/algorithm/method_mock/17_repeat.html"}],["meta",{"property":"og:site_name","content":"dcBlog"}],["meta",{"property":"og:title","content":"实现一个repeat方法"}],["meta",{"property":"og:description","content":"一、题意 使用JS实现一个repeat方法 调用这个 repeatedFunc(\\"hellworld\\")，会alert4次 helloworld, 每次间隔3秒 二、解法 解答此题的关键，在于使用await语法，结合event loop的机制，对执行语句进行阻塞。 如果单单靠setTimeout，是无法做到每次间隔3秒的要求。"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-19T13:13:32.000Z"}],["meta",{"property":"article:author","content":"Dachao"}],["meta",{"property":"article:modified_time","content":"2024-03-19T13:13:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"实现一个repeat方法\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-19T13:13:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dachao\\",\\"email\\":\\"wyc168hard@163.com\\"}]}"]]},"headers":[{"level":2,"title":"一、题意","slug":"一、题意","link":"#一、题意","children":[]},{"level":2,"title":"二、解法","slug":"二、解法","link":"#二、解法","children":[]}],"git":{"createdTime":1710854012000,"updatedTime":1710854012000,"contributors":[{"name":"dachao","email":"1114686398@qq.com","commits":1}]},"readingTime":{"minutes":0.48,"words":143},"filePathRelative":"algorithm/method_mock/17_repeat.md","localizedDate":"2024年3月19日","excerpt":"<h2>一、题意</h2>\\n<p>使用JS实现一个repeat方法</p>\\n<div class=\\"language-javascript\\" data-ext=\\"js\\" data-title=\\"js\\"><pre class=\\"language-javascript\\"><code><span class=\\"token keyword\\">function</span> <span class=\\"token function\\">repeat</span> <span class=\\"token punctuation\\">(</span><span class=\\"token parameter\\">func<span class=\\"token punctuation\\">,</span> times<span class=\\"token punctuation\\">,</span> wait</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token comment\\">//...</span>\\n<span class=\\"token punctuation\\">}</span>\\n<span class=\\"token keyword\\">const</span> repeatFunc <span class=\\"token operator\\">=</span> <span class=\\"token function\\">repeat</span><span class=\\"token punctuation\\">(</span>alert<span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">4</span><span class=\\"token punctuation\\">,</span> <span class=\\"token number\\">3000</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</code></pre></div>","autoDesc":true}');export{d as comp,k as data};
