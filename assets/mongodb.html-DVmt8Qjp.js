import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,e as t,a as s,b as a,d as c,o as l,r as i}from"./app-DWSfyW7-.js";const u="/dcblog/assets/mongodb-C-h67ZbU.jpg",r="/dcblog/assets/mongodb1-CR0f5hA_.jpg",d="/dcblog/assets/mongo-QygjfMl4.jpg",k="/dcblog/assets/1-BjlCgRK4.png",v="/dcblog/assets/2-BHFCUqyw.png",m="/dcblog/assets/3-Br15Un4g.png",b="/dcblog/assets/4-BjYz-KP0.png",g="/dcblog/assets/5-CGtzw2a0.png",h="/dcblog/assets/6-CaCTS1nc.png",y={},f={href:"https://mongodb.net.cn/manual/reference/configuration-options/",target:"_blank",rel:"noopener noreferrer"};function q(x,n){const p=i("ExternalLinkIcon");return l(),o("div",null,[n[5]||(n[5]=t('<h2 id="一、简介" tabindex="-1"><a class="header-anchor" href="#一、简介"><span>一、简介</span></a></h2><h3 id="_1-mongodb-是什么" tabindex="-1"><a class="header-anchor" href="#_1-mongodb-是什么"><span>1. Mongodb 是什么</span></a></h3><blockquote><p>MongoDB 是一个基于分布式文件存储的数据库，官方地址 https://www.mongodb.com/</p></blockquote><h3 id="_2-数据库是什么" tabindex="-1"><a class="header-anchor" href="#_2-数据库是什么"><span>2. 数据库是什么</span></a></h3><p>数据库（DataBase）是按照数据结构来组织、存储和管理数据的 <code>应用程序</code></p><h3 id="_3-数据库的作用" tabindex="-1"><a class="header-anchor" href="#_3-数据库的作用"><span>3. 数据库的作用</span></a></h3><p>数据库的主要作用就是 <code>管理数据</code>，对数据进行 <code>增（c）、删（d）、改（u）、查（r）</code></p><h3 id="_4-数据库管理数据的特点" tabindex="-1"><a class="header-anchor" href="#_4-数据库管理数据的特点"><span>4. 数据库管理数据的特点</span></a></h3><p>相比于纯文件管理数据，数据库管理数据有如下特点：</p><ol><li>速度更快</li><li>扩展性更强</li><li>安全性更强</li></ol><h3 id="_5-为什么选择-mongodb" tabindex="-1"><a class="header-anchor" href="#_5-为什么选择-mongodb"><span>5. 为什么选择 Mongodb</span></a></h3><p>操作语法与 JavaScript 类似，容易上手，学习成本低</p><h2 id="二、核心概念" tabindex="-1"><a class="header-anchor" href="#二、核心概念"><span>二、核心概念</span></a></h2><p>Mongodb 中有三个重要概念需要掌握</p><ul><li><p>数据库（database） 数据库是一个数据仓库，数据库服务下可以创建很多数据库，数据库中可以存放很多集合</p></li><li><p>集合（collection） 集合类似于 JS 中的数组，在集合中可以存放很多文档</p></li><li><p>文档（document） 文档是数据库中的最小单位，类似于 JS 中的对象</p></li></ul><img src="'+u+`" alt="09_mongodb" style="zoom:67%;"><p>JSON 文件示例：</p><div class="language-json line-numbers-mode" data-ext="json" data-title="json"><pre class="language-json"><code><span class="token punctuation">{</span>
	<span class="token property">&quot;accounts&quot;</span><span class="token operator">:</span> <span class="token punctuation">[</span>
  	<span class="token punctuation">{</span>
		<span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;3-YLju5f3&quot;</span><span class="token punctuation">,</span>
  		<span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;买电脑&quot;</span><span class="token punctuation">,</span>
  		<span class="token property">&quot;time&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-02-08&quot;</span><span class="token punctuation">,</span>
  		<span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;-1&quot;</span><span class="token punctuation">,</span>
  		<span class="token property">&quot;account&quot;</span><span class="token operator">:</span> <span class="token string">&quot;5500&quot;</span><span class="token punctuation">,</span>
  		<span class="token property">&quot;remarks&quot;</span><span class="token operator">:</span> <span class="token string">&quot;为了上网课&quot;</span>
  	<span class="token punctuation">}</span><span class="token punctuation">,</span>
  	<span class="token punctuation">{</span>
  		<span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;3-YLju5f4&quot;</span><span class="token punctuation">,</span>
  		<span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;请女朋友吃饭&quot;</span><span class="token punctuation">,</span>
  		<span class="token property">&quot;time&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-02-08&quot;</span><span class="token punctuation">,</span>
  		<span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;-1&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;account&quot;</span><span class="token operator">:</span> <span class="token string">&quot;214&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;remarks&quot;</span><span class="token operator">:</span> <span class="token string">&quot;情人节聚餐&quot;</span>
	<span class="token punctuation">}</span><span class="token punctuation">,</span>
	<span class="token punctuation">{</span>
          <span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token string">&quot;mRQiD4s3K&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;title&quot;</span><span class="token operator">:</span> <span class="token string">&quot;发工资&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;time&quot;</span><span class="token operator">:</span> <span class="token string">&quot;2023-02-19&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;type&quot;</span><span class="token operator">:</span> <span class="token string">&quot;1&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;account&quot;</span><span class="token operator">:</span> <span class="token string">&quot;4396&quot;</span><span class="token punctuation">,</span>
          <span class="token property">&quot;remarks&quot;</span><span class="token operator">:</span> <span class="token string">&quot;终于发工资啦!~~&quot;</span>
     <span class="token punctuation">}</span>
  <span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token property">&quot;users&quot;</span><span class="token operator">:</span><span class="token punctuation">[</span>
  	<span class="token punctuation">{</span>
  		<span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">1</span><span class="token punctuation">,</span>
  		<span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;zhangsan&quot;</span><span class="token punctuation">,</span>
        <span class="token property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token number">18</span>
  	<span class="token punctuation">}</span><span class="token punctuation">,</span>
  	<span class="token punctuation">{</span>
  		<span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">2</span><span class="token punctuation">,</span>
  		<span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;lisi&quot;</span><span class="token punctuation">,</span>
  		<span class="token property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token number">20</span>
  	<span class="token punctuation">}</span><span class="token punctuation">,</span>
  	<span class="token punctuation">{</span>
  		<span class="token property">&quot;id&quot;</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span>
  		<span class="token property">&quot;name&quot;</span><span class="token operator">:</span> <span class="token string">&quot;wangwu&quot;</span><span class="token punctuation">,</span>
  		<span class="token property">&quot;age&quot;</span><span class="token operator">:</span> <span class="token number">22</span>
  	<span class="token punctuation">}</span>
  <span class="token punctuation">]</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>大家可以通过 JSON 文件来理解 Mongodb 中的概念</p><ul><li><p>一个 <code>JSON 文件</code> 好比是一个 <code>数据库</code>，一个 Mongodb 服务下可以有 N 个数据库</p></li><li><p>JSON 文件中的 <code>一级属性的数组值</code> 好比是 <code>集合</code></p></li><li><p>数组中的对象好比是 <code>文档</code></p></li><li><p>对象中的属性有时也称之为 <code>字段</code></p></li></ul><table><thead><tr><th style="text-align:left;">SQL术语/概念</th><th style="text-align:left;">MongoDB术语/概念</th><th style="text-align:left;">解释/说明</th></tr></thead><tbody><tr><td style="text-align:left;">database</td><td style="text-align:left;">database</td><td style="text-align:left;">数据库</td></tr><tr><td style="text-align:left;">table</td><td style="text-align:left;">collection</td><td style="text-align:left;">数据库表/集合</td></tr><tr><td style="text-align:left;">row</td><td style="text-align:left;">document</td><td style="text-align:left;">数据记录行/文档</td></tr><tr><td style="text-align:left;">column</td><td style="text-align:left;">field</td><td style="text-align:left;">数据字段/域</td></tr><tr><td style="text-align:left;">index</td><td style="text-align:left;">index</td><td style="text-align:left;">索引</td></tr><tr><td style="text-align:left;">table joins</td><td style="text-align:left;"></td><td style="text-align:left;">表连接,MongoDB不支持</td></tr><tr><td style="text-align:left;">primary key</td><td style="text-align:left;">primary key</td><td style="text-align:left;">主键,MongoDB自动将_id字段设置为主键</td></tr></tbody></table><blockquote><p>一般情况下</p><ul><li>一个项目使用一个数据库</li><li>一个集合会存储同一种类型的数据</li></ul></blockquote><h3 id="_1-下载安装与启动" tabindex="-1"><a class="header-anchor" href="#_1-下载安装与启动"><span>1. 下载安装与启动</span></a></h3><p>下载地址： https://www.mongodb.com/try/download/community</p><p>建议选择 <code>zip</code> 类型， 通用性更强</p>`,25)),s("ul",null,[s("li",null,[n[1]||(n[1]=a("使用msi类型安装时会安装MongoDB的二进制文件和默认的")),s("a",f,[n[0]||(n[0]=a("配置文件")),c(p)]),n[2]||(n[2]=a("，同时可以选择将")),n[3]||(n[3]=s("code",null,"mongodb",-1)),n[4]||(n[4]=a("添加到系统服务中实现开机自动启动。"))])]),n[6]||(n[6]=t(`<p>配置步骤如下:</p><pre><code>1&gt; 将压缩包移动到 \`C:\\Program Files\` 下，然后解压

2&gt; 创建 \`C:\\data\\db\` 目录，mongodb 会将数据默认保存在这个文件夹

3&gt; 以 mongodb 中 bin 目录作为工作目录，启动命令行

4&gt; 运行命令 \`mongod\`
</code></pre><figure><img src="`+r+'" alt="09_mongodb" tabindex="0" loading="lazy"><figcaption>09_mongodb</figcaption></figure><p>看到最后的 <code>waiting for connections</code> 则表明服务 <code>已经启动成功</code></p><p>然后可以使用 <code>mongo</code> 命令连接本机的 mongodb 服务</p><figure><img src="'+d+`" alt="09_mongodb" tabindex="0" loading="lazy"><figcaption>09_mongodb</figcaption></figure><blockquote><p>注意：</p><ul><li>为了方便后续方便使用 mongod 命令，可以将 bin 目录配置到环境变量 Path 中</li><li><code>千万不要选中服务端窗口的内容</code>，选中会停止服务，可以 <code>敲回车</code> 取消选中</li></ul></blockquote><h3 id="_2-命令行交互" tabindex="-1"><a class="header-anchor" href="#_2-命令行交互"><span>2. 命令行交互</span></a></h3><p>命令行交互一般是学习数据库的第一步，不过这些命令在后续用的比较少，所以大家了解即可</p><h3 id="_3-数据库命令" tabindex="-1"><a class="header-anchor" href="#_3-数据库命令"><span>3. 数据库命令</span></a></h3><ol><li><p>显示所有的数据库</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">show</span> dbs  
<span class="token keyword">show</span> <span class="token keyword">databases</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>切换到指定的数据库，如果数据库不存在会自动创建数据库</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">use</span> 数据库名
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查看当前操作的数据库</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>db
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>删除当前数据库</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">use</span> 库名
db<span class="token punctuation">.</span>dropDatabase<span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li></ol><h3 id="_4-集合命令" tabindex="-1"><a class="header-anchor" href="#_4-集合命令"><span>4. 集合命令</span></a></h3><ol><li><p>创建集合</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>db<span class="token punctuation">.</span>createCollection<span class="token punctuation">(</span><span class="token string">&#39;集合名称&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>显示当前数据库中的所有集合</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code><span class="token keyword">show</span> collections
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>删除某个集合</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>db<span class="token punctuation">.</span>集合名<span class="token punctuation">.</span><span class="token keyword">drop</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>重命名集合</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>db<span class="token punctuation">.</span>集合名<span class="token punctuation">.</span>renameCollection<span class="token punctuation">(</span><span class="token string">&#39;newName&#39;</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h3 id="_5-文档命令" tabindex="-1"><a class="header-anchor" href="#_5-文档命令"><span>5. 文档命令</span></a></h3><ol><li><p>插入文档</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>db<span class="token punctuation">.</span>集合名<span class="token punctuation">.</span><span class="token keyword">insert</span><span class="token punctuation">(</span>文档对象<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li><li><p>查询文档</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>集合名<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span>查询条件<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p><span style="color:red;">_id 是 mongodb 自动生成的唯一编号，用来唯一标识文档</span></p></li><li><p>更新文档</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>db<span class="token punctuation">.</span>集合名<span class="token punctuation">.</span><span class="token keyword">update</span><span class="token punctuation">(</span>查询条件<span class="token punctuation">,</span>新的文档<span class="token punctuation">)</span>
db<span class="token punctuation">.</span>集合名<span class="token punctuation">.</span><span class="token keyword">update</span><span class="token punctuation">(</span>{name:<span class="token string">&#39;张三&#39;</span>}<span class="token punctuation">,</span>{$<span class="token keyword">set</span>:{age:<span class="token number">19</span>}}<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div></li><li><p>删除文档</p><div class="language-sql line-numbers-mode" data-ext="sql" data-title="sql"><pre class="language-sql"><code>db<span class="token punctuation">.</span>集合名<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>查询条件<span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></li></ol><h3 id="_6-命令汇总" tabindex="-1"><a class="header-anchor" href="#_6-命令汇总"><span>6. 命令汇总</span></a></h3><p><strong>数据库</strong></p><figure><img src="`+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><strong>集合</strong></p><figure><img src="'+v+'" alt="2" tabindex="0" loading="lazy"><figcaption>2</figcaption></figure><p><strong>文档</strong></p><figure><img src="'+m+'" alt="3" tabindex="0" loading="lazy"><figcaption>3</figcaption></figure><figure><img src="'+b+'" alt="4" tabindex="0" loading="lazy"><figcaption>4</figcaption></figure><figure><img src="'+g+'" alt="5" tabindex="0" loading="lazy"><figcaption>5</figcaption></figure><figure><img src="'+h+`" alt="6" tabindex="0" loading="lazy"><figcaption>6</figcaption></figure><h3 id="_7-应用场景" tabindex="-1"><a class="header-anchor" href="#_7-应用场景"><span>7. 应用场景</span></a></h3><h4 id="新增" tabindex="-1"><a class="header-anchor" href="#新增"><span>新增</span></a></h4><ul><li>用户注册</li><li>发布视频</li><li>发布商品</li><li>发朋友圈</li><li>发评论</li><li>发微博</li><li>发弹幕</li><li>.......</li></ul><h4 id="删除" tabindex="-1"><a class="header-anchor" href="#删除"><span>删除</span></a></h4><ul><li><p>删除评论</p></li><li><p>删除商品</p></li><li><p>删除文章</p></li><li><p>删除视频</p></li><li><p>删除微博</p></li><li><p>......</p></li></ul><h4 id="更新" tabindex="-1"><a class="header-anchor" href="#更新"><span>更新</span></a></h4><ul><li>更新个人信息</li><li>修改商品价格</li><li>修改文章内容</li><li>......</li></ul><h4 id="查询" tabindex="-1"><a class="header-anchor" href="#查询"><span>查询</span></a></h4><ul><li>商品列表</li><li>视频列表</li><li>朋友圈列表</li><li>微博列表</li><li>搜索功能</li><li>......</li></ul><h2 id="三、mongoose" tabindex="-1"><a class="header-anchor" href="#三、mongoose"><span>三、Mongoose</span></a></h2><h3 id="_1-介绍" tabindex="-1"><a class="header-anchor" href="#_1-介绍"><span>1. 介绍</span></a></h3><p>官网 http://www.mongoosejs.net/</p><ul><li>Mongoose是一个让我们可以通过Node来操作MongoDB的模块。</li><li>Mongoose是一个对象文档模型(ODM)库,它对Node原生的MongoDB模块进行了进一步的优化封装，并提供了更多的功能。在大多数情况下，它被用来把结构化的模式应用到一个MongoDB集合，并提供了验证和类型转换等功能</li><li>mongoose中的对象： <ul><li>Schema 模式对象（Schema对象定义约束了数据库中的文档结构）</li><li>Model 模型对象（Model对象作为集合中的所有文档的表示，相当于MongoDB数据库中的集合collection）</li><li>Document 文档对象（Document表示集合中的具体文档，相当于集合中的一个具体的文档）</li></ul></li></ul><h3 id="_2-安装" tabindex="-1"><a class="header-anchor" href="#_2-安装"><span>2. 安装</span></a></h3><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token function">npm</span> i mongoose
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h3 id="_3-使用流程" tabindex="-1"><a class="header-anchor" href="#_3-使用流程"><span>3. 使用流程</span></a></h3><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code> <span class="token comment">//1. 导入 mongoose</span>
 <span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

 <span class="token comment">//2. 连接数据库</span>
 <span class="token comment">//当连接的数据库不存在，插入文档时会自动创建此数据库，如果端口号是默认端口号(27017)则可以省略不写</span>
 mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://127.0.0.1:27017/bilibili&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 <span class="token comment">//                                          数据库名称</span>

 <span class="token comment">//3. 设置连接回调</span>
 <span class="token comment">//连接成功   once 一次   事件回调函数只执行一次</span>
mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">&#39;open&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;连接成功&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 	<span class="token comment">//4. 创建文档结构对象</span>
    <span class="token comment">// 设置集合中文档的属性以及属性值的类型</span>
 	<span class="token keyword">let</span> BookSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 		<span class="token literal-property property">title</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
 		<span class="token literal-property property">author</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
 		<span class="token literal-property property">price</span><span class="token operator">:</span> Number
 	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
     
 	<span class="token comment">//5. 创建文档模型对象  对文档操作的封装对象  mongoose会使用集合名称的复数，创建集合</span>
 	<span class="token keyword">let</span> BookModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;book&#39;</span><span class="token punctuation">,</span> BookSchema<span class="token punctuation">)</span><span class="token punctuation">;</span>
	
     <span class="token comment">//6. 插入文档</span>
 	BookModel<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
 		<span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token string">&#39;西游记&#39;</span><span class="token punctuation">,</span>
 		<span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;吴承恩&#39;</span><span class="token punctuation">,</span>
		<span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token number">19.9</span>
 	<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token comment">// 判断是否有错误</span>
 		<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
        <span class="token comment">//输出 data 对象  如果没有出错，则输出插入后的文档对象</span>
 		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
 		<span class="token comment">//7. 断开连接  关闭数据链接 (项目运行过程中，不会添加该代码)</span>
 		mongoose<span class="token punctuation">.</span><span class="token function">disconnect</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
 	<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//连接出错</span>
mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;连接出错~~&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token comment">//连接关闭</span>
mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;连接关闭&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>MongoDB数据库，一般情况下，只需要连接一次，连接一次后，除非项目停止服务器关闭，否则连接一般不会断开</p></blockquote><h3 id="_4-字段类型" tabindex="-1"><a class="header-anchor" href="#_4-字段类型"><span>4. 字段类型</span></a></h3><p>文档结构可选的常用字段类型列表</p><table><thead><tr><th>类型</th><th>描述</th></tr></thead><tbody><tr><td>String</td><td>字符串</td></tr><tr><td>Number</td><td>数字</td></tr><tr><td>Boolean</td><td>布尔值</td></tr><tr><td>Array</td><td>数组，也可以使用 <code>[]</code> 来标识</td></tr><tr><td>Date</td><td>日期</td></tr><tr><td>Buffer</td><td>Buffer 对象</td></tr><tr><td>Mixed</td><td>任意类型，需要使用 <code>mongoose.Schema.Types.Mixed</code> 指定</td></tr><tr><td>ObjectId</td><td>对象 ID，需要使用 <code>mongoose.Schema.Types.ObjectId</code> 指定</td></tr><tr><td>Decimal128</td><td>高精度数字，需要使用 <code>mongoose.Schema.Types.Decimal128</code> 指定</td></tr></tbody></table><h3 id="_5-字段值验证" tabindex="-1"><a class="header-anchor" href="#_5-字段值验证"><span>5. 字段值验证</span></a></h3><p>Mongoose 有一些内建验证器，可以对字段值进行验证，在定义Schema时使用。</p><h4 id="必填项" tabindex="-1"><a class="header-anchor" href="#必填项"><span>必填项</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">title</span><span class="token operator">:</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
 	<span class="token literal-property property">required</span><span class="token operator">:</span> <span class="token boolean">true</span> <span class="token comment">// 设置必填项</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="默认值" tabindex="-1"><a class="header-anchor" href="#默认值"><span>默认值</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token punctuation">{</span>
 	<span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
 	<span class="token keyword">default</span><span class="token operator">:</span> <span class="token string">&#39;匿名&#39;</span> <span class="token comment">//默认值</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="枚举值" tabindex="-1"><a class="header-anchor" href="#枚举值"><span>枚举值</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">gender</span><span class="token operator">:</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
	<span class="token keyword">enum</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&#39;男&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;女&#39;</span><span class="token punctuation">]</span> <span class="token comment">//设置的值必须是数组中的</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="唯一值" tabindex="-1"><a class="header-anchor" href="#唯一值"><span>唯一值</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">username</span><span class="token operator">:</span> <span class="token punctuation">{</span>
	<span class="token literal-property property">type</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
 	<span class="token literal-property property">unique</span><span class="token operator">:</span> <span class="token boolean">true</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="自定义匹配" tabindex="-1"><a class="header-anchor" href="#自定义匹配"><span>自定义匹配</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token punctuation">{</span>
    <span class="token literal-property property">type</span><span class="token operator">:</span>String<span class="token punctuation">,</span>
    <span class="token literal-property property">validate</span><span class="token operator">:</span>nameLength
<span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token keyword">function</span> <span class="token function">nameLength</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">{</span><span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>validate实际上是一个函数，函数的参数代表当前字段，返回true表示通过验证，返回false表示未通过验证</li></ul><blockquote><p>unique 需要 <code>重建集合</code> 才能有效果</p><p>永远不要相信用户的输入</p></blockquote><h3 id="_6-curd" tabindex="-1"><a class="header-anchor" href="#_6-curd"><span>6. CURD</span></a></h3><p>数据库的基本操作包括四个，增加（create），删除（delete），修改（update），查（read）</p><h4 id="增加" tabindex="-1"><a class="header-anchor" href="#增加"><span>增加</span></a></h4><p>插入一条</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>SongModel<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
	<span class="token literal-property property">title</span><span class="token operator">:</span><span class="token string">&#39;给我一首歌的时间&#39;</span><span class="token punctuation">,</span>
 	<span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;Jay&#39;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token comment">//错误</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">//插入后的数据对象</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>批量插入</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//1.引入mongoose</span>
<span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//2.连接mongodb数据库</span>
mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token string">&#39;mongodb://127.0.0.1:27017/project&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//3.设置连接的回调</span>
mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;open&#39;</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
	<span class="token comment">//4.声明文档结构</span>
	<span class="token keyword">const</span> PhoneSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
		<span class="token literal-property property">brand</span><span class="token operator">:</span>String<span class="token punctuation">,</span>
		<span class="token literal-property property">color</span><span class="token operator">:</span>String<span class="token punctuation">,</span>
		<span class="token literal-property property">price</span><span class="token operator">:</span>Number<span class="token punctuation">,</span>
 		<span class="token literal-property property">tags</span><span class="token operator">:</span>Array
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
 	<span class="token comment">//6.创建模型对象</span>
 	<span class="token keyword">const</span> PhoneModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;phone&#39;</span><span class="token punctuation">,</span>PhoneSchema<span class="token punctuation">)</span><span class="token punctuation">;</span>
 	PhoneModel<span class="token punctuation">.</span><span class="token function">insertMany</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
 		<span class="token punctuation">{</span>
 			<span class="token literal-property property">brand</span><span class="token operator">:</span><span class="token string">&#39;华为&#39;</span><span class="token punctuation">,</span>
 			<span class="token literal-property property">color</span><span class="token operator">:</span><span class="token string">&#39;灰色&#39;</span><span class="token punctuation">,</span>
 			<span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">2399</span><span class="token punctuation">,</span>
 			<span class="token literal-property property">tags</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;电量大&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;屏幕大&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;信号好&#39;</span><span class="token punctuation">]</span>
 		<span class="token punctuation">}</span><span class="token punctuation">,</span>
 		<span class="token punctuation">{</span>
 			<span class="token literal-property property">brand</span><span class="token operator">:</span><span class="token string">&#39;小米&#39;</span><span class="token punctuation">,</span>
 			<span class="token literal-property property">color</span><span class="token operator">:</span><span class="token string">&#39;白色&#39;</span><span class="token punctuation">,</span>
 			<span class="token literal-property property">price</span><span class="token operator">:</span><span class="token number">2099</span><span class="token punctuation">,</span>
 			<span class="token literal-property property">tags</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token string">&#39;电量大&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;屏幕大&#39;</span><span class="token punctuation">,</span><span class="token string">&#39;信号好&#39;</span><span class="token punctuation">]</span>
         <span class="token punctuation">}</span>
	<span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
		<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
         console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;写入成功&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
         mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token punctuation">}</span><span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="删除-1" tabindex="-1"><a class="header-anchor" href="#删除-1"><span>删除</span></a></h4><p>删除一条数据</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>SongModel<span class="token punctuation">.</span><span class="token function">deleteOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token string">&#39;5dd65f32be6401035cb5b1ed&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
 	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
 	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;删除成功&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>批量删除</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>SongModel<span class="token punctuation">.</span><span class="token function">deleteMany</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">author</span><span class="token operator">:</span><span class="token string">&#39;Jay&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
 	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
 	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;删除成功&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="更新-1" tabindex="-1"><a class="header-anchor" href="#更新-1"><span>更新</span></a></h4><p>更新一条数据</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//{author: &#39;JJ Lin&#39;}, {$set:{author: &#39;林俊杰&#39;}}命令行中需要加$set</span>
SongModel<span class="token punctuation">.</span><span class="token function">updateOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;JJ Lin&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;林俊杰&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>批量更新数据</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>SongModel<span class="token punctuation">.</span><span class="token function">updateMany</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;Leehom Wang&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;王力宏&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">err</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="查询-1" tabindex="-1"><a class="header-anchor" href="#查询-1"><span>查询</span></a></h4><p>查询一条数据</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>SongModel<span class="token punctuation">.</span><span class="token function">findOne</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;王力宏&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//根据 id 查询数据</span>
SongModel<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span><span class="token string">&#39;5dd662b5381fc316b44ce167&#39;</span><span class="token punctuation">,</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>批量查询数据</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//不加条件查询</span>
SongModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//加条件查询</span>
SongModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;王力宏&#39;</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_7-条件控制" tabindex="-1"><a class="header-anchor" href="#_7-条件控制"><span>7. 条件控制</span></a></h3><h4 id="运算符" tabindex="-1"><a class="header-anchor" href="#运算符"><span>运算符</span></a></h4><p>在 mongodb 不能 &gt; &lt; &gt;= &lt;= !== 等运算符，需要使用替代符号</p><ul><li><code>&gt;</code>使用 <code>$gt</code></li><li><code>&lt;</code> 使用 <code>$lt</code></li><li><code>=</code> 使用 <code>$gte</code></li><li><code>&lt;=</code> 使用 <code>$lte</code></li><li><code>!==</code> 使用 <code>$ne</code></li></ul><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>students<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">id</span><span class="token operator">:</span><span class="token punctuation">{</span><span class="token literal-property property">$gt</span><span class="token operator">:</span><span class="token number">3</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span> id号比<span class="token number">3</span>大的所有的记录

<span class="token comment">// 价格小于 20 的图书</span>
BookModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lt</span><span class="token operator">:</span> <span class="token number">20</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;读取失败~~~&#39;</span><span class="token punctuation">)</span>
		<span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="逻辑运算" tabindex="-1"><a class="header-anchor" href="#逻辑运算"><span>逻辑运算</span></a></h4><p><code>$or</code> 逻辑或的情况</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>students<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">$or</span><span class="token operator">:</span><span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">18</span><span class="token punctuation">}</span><span class="token punctuation">,</span><span class="token punctuation">{</span><span class="token literal-property property">age</span><span class="token operator">:</span><span class="token number">24</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 曹雪芹 或者 余华的书</span>
BookModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">$or</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;曹雪芹&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;余华&#39;</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span><span class="token operator">=&gt;</span><span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;读取失败~~~&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>$and</code> 逻辑与的情况</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>students<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">$and</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span><span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">$lt</span><span class="token operator">:</span><span class="token number">20</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span><span class="token literal-property property">age</span><span class="token operator">:</span> <span class="token punctuation">{</span><span class="token literal-property property">$gt</span><span class="token operator">:</span> <span class="token number">15</span><span class="token punctuation">}</span><span class="token punctuation">}</span><span class="token punctuation">]</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 价格大于 30 且 小于 70</span>
BookModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">$and</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token punctuation">{</span> <span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$gt</span><span class="token operator">:</span> <span class="token number">30</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">{</span> <span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token literal-property property">$lt</span><span class="token operator">:</span> <span class="token number">70</span> <span class="token punctuation">}</span> <span class="token punctuation">}</span><span class="token punctuation">]</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;读取失败~~~&#39;</span><span class="token punctuation">)</span>
      <span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="正则匹配" tabindex="-1"><a class="header-anchor" href="#正则匹配"><span>正则匹配</span></a></h4><p>条件中可以直接使用 JS 的正则语法，通过正则可以进行模糊查询</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>db<span class="token punctuation">.</span>students<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">name</span><span class="token operator">:</span><span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">imissyou</span><span class="token regex-delimiter">/</span></span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

正则表达式，搜索书籍名称中带有 <span class="token string">&#39;三&#39;</span> 的图书
BookModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token regex"><span class="token regex-delimiter">/</span><span class="token regex-source language-regex">三</span><span class="token regex-delimiter">/</span></span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
	<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
		console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;读取失败~~~&#39;</span><span class="token punctuation">)</span>
      	<span class="token keyword">return</span>
	<span class="token punctuation">}</span>
   console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

BookModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token keyword">new</span> <span class="token class-name">RegExp</span><span class="token punctuation">(</span><span class="token string">&#39;三&#39;</span><span class="token punctuation">)</span> <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
 	<span class="token keyword">if</span> <span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;读取失败~~~&#39;</span><span class="token punctuation">)</span>
      	<span class="token keyword">return</span>
    <span class="token punctuation">}</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_8-个性化读取" tabindex="-1"><a class="header-anchor" href="#_8-个性化读取"><span>8. 个性化读取</span></a></h3><h4 id="字段筛选" tabindex="-1"><a class="header-anchor" href="#字段筛选"><span>字段筛选</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//0:不要的字段</span>
<span class="token comment">//1:要的字段</span>
SongModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">title</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><blockquote><p>回调不可省略，但是可以使用exec() 简写</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code>SongModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">select</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">_id</span><span class="token operator">:</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token literal-property property">title</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></blockquote><h4 id="数据排序" tabindex="-1"><a class="header-anchor" href="#数据排序"><span>数据排序</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">// sort 排序</span>
<span class="token comment">// 1:升序</span>
<span class="token comment">// -1:倒序</span>
SongModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sort</span><span class="token punctuation">(</span><span class="token punctuation">{</span><span class="token literal-property property">hot</span><span class="token operator">:</span><span class="token number">1</span><span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h4 id="数据截取" tabindex="-1"><a class="header-anchor" href="#数据截取"><span>数据截取</span></a></h4><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//skip 跳过   limit 限定</span>
SongModel<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">skip</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">limit</span><span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exec</span><span class="token punctuation">(</span><span class="token keyword">function</span><span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span>data</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
	<span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token keyword">throw</span> err<span class="token punctuation">;</span>
	console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
	mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">close</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h3 id="_9-模块化" tabindex="-1"><a class="header-anchor" href="#_9-模块化"><span>9. 模块化</span></a></h3><p>将现有的代码进行合理的拆分</p><div class="language-text line-numbers-mode" data-ext="text" data-title="text"><pre class="language-text"><code>02_mongoose模块化
 ├── config
 │   └── config.js
 ├── db
 │   └── db.js
 ├── models
 │   ├── BookModel.js
 │   └── MovieModel.js
 ├── index.js
 └── test.js
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>其中config保存数据库连接时的相关配置。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//配置文件</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span>
  <span class="token constant">DBHOST</span><span class="token operator">:</span> <span class="token string">&#39;127.0.0.1&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">DBPORT</span><span class="token operator">:</span> <span class="token number">27017</span><span class="token punctuation">,</span>
  <span class="token constant">DBNAME</span><span class="token operator">:</span> <span class="token string">&#39;bilibili&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">USER</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span><span class="token punctuation">,</span>
  <span class="token constant">PASSWORD</span><span class="token operator">:</span> <span class="token string">&#39;&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>db则用来保存数据库连接时的通用代码，这样我们以后只需要写成功或失败连接后的回调逻辑即可。</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token doc-comment comment">/**
 * 
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">success</span> 数据库连接成功的回调
 * <span class="token keyword">@param</span> <span class="token class-name"><span class="token punctuation">{</span><span class="token operator">*</span><span class="token punctuation">}</span></span> <span class="token parameter">error</span> 数据库连接失败的回调
 */</span>
module<span class="token punctuation">.</span><span class="token function-variable function">exports</span> <span class="token operator">=</span> <span class="token keyword">function</span> <span class="token punctuation">(</span><span class="token parameter">success<span class="token punctuation">,</span> error</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
  <span class="token comment">//判断 error 为其设置默认值</span>
  <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">typeof</span> error <span class="token operator">!==</span> <span class="token string">&#39;function&#39;</span><span class="token punctuation">)</span><span class="token punctuation">{</span>
    <span class="token function-variable function">error</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;连接失败~~~&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
  <span class="token punctuation">}</span>
  <span class="token comment">//1. 安装 mongoose</span>
  <span class="token comment">//2. 导入 mongoose</span>
  <span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token comment">//导入 配置文件</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span><span class="token constant">DBHOST</span><span class="token punctuation">,</span> <span class="token constant">DBPORT</span><span class="token punctuation">,</span> <span class="token constant">DBNAME</span><span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;../config/config.js&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//设置 strictQuery 为 true</span>
  mongoose<span class="token punctuation">.</span><span class="token function">set</span><span class="token punctuation">(</span><span class="token string">&#39;strictQuery&#39;</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//3. 连接 mongodb 服务                        数据库的名称</span>
  mongoose<span class="token punctuation">.</span><span class="token function">connect</span><span class="token punctuation">(</span><span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">mongodb://</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">DBHOST</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">:</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">DBPORT</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">/</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span><span class="token constant">DBNAME</span><span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//4. 设置回调</span>
  <span class="token comment">// 设置连接成功的回调</span>
  mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">once</span><span class="token punctuation">(</span><span class="token string">&#39;open&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">// 设置连接错误的回调</span>
  mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;error&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token function">error</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token comment">//设置连接关闭的回调</span>
  mongoose<span class="token punctuation">.</span>connection<span class="token punctuation">.</span><span class="token function">on</span><span class="token punctuation">(</span><span class="token string">&#39;close&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;连接关闭&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>models中用来保存集合的Schema配置</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//设置集合中文档的属性以及属性值的类型</span>
<span class="token keyword">let</span> BookSchema <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">mongoose<span class="token punctuation">.</span>Schema</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token literal-property property">name</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
  <span class="token literal-property property">author</span><span class="token operator">:</span> String<span class="token punctuation">,</span>
  <span class="token literal-property property">price</span><span class="token operator">:</span> Number
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//创建模型对象  对文档操作的封装对象</span>
<span class="token keyword">let</span> BookModel <span class="token operator">=</span> mongoose<span class="token punctuation">.</span><span class="token function">model</span><span class="token punctuation">(</span><span class="token string">&#39;books&#39;</span><span class="token punctuation">,</span> BookSchema<span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">//暴露模型对象</span>
module<span class="token punctuation">.</span>exports <span class="token operator">=</span> BookModel<span class="token punctuation">;</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>index.js（主要书写）</p><div class="language-javascript line-numbers-mode" data-ext="js" data-title="js"><pre class="language-javascript"><code><span class="token comment">//导入 mongoose</span>
<span class="token keyword">const</span> mongoose <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;mongoose&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//导入 db 文件</span>
<span class="token keyword">const</span> db <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./db/db&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token comment">//导入 BookModel</span>
<span class="token keyword">const</span> BookModel <span class="token operator">=</span> <span class="token function">require</span><span class="token punctuation">(</span><span class="token string">&#39;./models/BookModel&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

<span class="token comment">// 调用函数</span>
<span class="token function">db</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token comment">//7. 新增</span>
  BookModel<span class="token punctuation">.</span><span class="token function">create</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
    <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&#39;西游记&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">author</span><span class="token operator">:</span> <span class="token string">&#39;吴承恩&#39;</span><span class="token punctuation">,</span>
    <span class="token literal-property property">price</span><span class="token operator">:</span> <span class="token number">19.9</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token parameter">err<span class="token punctuation">,</span> data</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token comment">//判断是否有错误</span>
    <span class="token keyword">if</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span> <span class="token punctuation">{</span>
      console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>err<span class="token punctuation">)</span><span class="token punctuation">;</span>
      <span class="token keyword">return</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
    <span class="token comment">//如果没有出错, 则输出插入后的文档对象</span>
    console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span><span class="token string">&#39;连接失败...&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><h2 id="四、图形化管理工具" tabindex="-1"><a class="header-anchor" href="#四、图形化管理工具"><span>四、图形化管理工具</span></a></h2><p>我们可以使用图形化的管理工具来对 Mongodb 进行交互，这里列出两个图形化工具</p><ul><li><p>Robo 3T 免费 https://github.com/Studio3T/robomongo/releases</p></li><li><p>Navicat 收费 https://www.navicat.com.cn/</p></li></ul>`,117))])}const _=e(y,[["render",q],["__file","mongodb.html.vue"]]),M=JSON.parse('{"path":"/Server/mongodb/mongodb.html","title":"MongoDB","lang":"zh-CN","frontmatter":{"title":"MongoDB","description":"一、简介 1. Mongodb 是什么 MongoDB 是一个基于分布式文件存储的数据库，官方地址 https://www.mongodb.com/ 2. 数据库是什么 数据库（DataBase）是按照数据结构来组织、存储和管理数据的 应用程序 3. 数据库的作用 数据库的主要作用就是 管理数据，对数据进行 增（c）、删（d）、改（u）、查（r） 4....","head":[["meta",{"property":"og:url","content":"https://github.com/dcblog/Server/mongodb/mongodb.html"}],["meta",{"property":"og:site_name","content":"dcBlog"}],["meta",{"property":"og:title","content":"MongoDB"}],["meta",{"property":"og:description","content":"一、简介 1. Mongodb 是什么 MongoDB 是一个基于分布式文件存储的数据库，官方地址 https://www.mongodb.com/ 2. 数据库是什么 数据库（DataBase）是按照数据结构来组织、存储和管理数据的 应用程序 3. 数据库的作用 数据库的主要作用就是 管理数据，对数据进行 增（c）、删（d）、改（u）、查（r） 4...."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-19T13:13:32.000Z"}],["meta",{"property":"article:author","content":"Dachao"}],["meta",{"property":"article:modified_time","content":"2024-03-19T13:13:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"MongoDB\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-19T13:13:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dachao\\",\\"email\\":\\"wyc168hard@163.com\\"}]}"]]},"headers":[{"level":2,"title":"一、简介","slug":"一、简介","link":"#一、简介","children":[{"level":3,"title":"1. Mongodb 是什么","slug":"_1-mongodb-是什么","link":"#_1-mongodb-是什么","children":[]},{"level":3,"title":"2. 数据库是什么","slug":"_2-数据库是什么","link":"#_2-数据库是什么","children":[]},{"level":3,"title":"3. 数据库的作用","slug":"_3-数据库的作用","link":"#_3-数据库的作用","children":[]},{"level":3,"title":"4. 数据库管理数据的特点","slug":"_4-数据库管理数据的特点","link":"#_4-数据库管理数据的特点","children":[]},{"level":3,"title":"5. 为什么选择 Mongodb","slug":"_5-为什么选择-mongodb","link":"#_5-为什么选择-mongodb","children":[]}]},{"level":2,"title":"二、核心概念","slug":"二、核心概念","link":"#二、核心概念","children":[{"level":3,"title":"1. 下载安装与启动","slug":"_1-下载安装与启动","link":"#_1-下载安装与启动","children":[]},{"level":3,"title":"2. 命令行交互","slug":"_2-命令行交互","link":"#_2-命令行交互","children":[]},{"level":3,"title":"3. 数据库命令","slug":"_3-数据库命令","link":"#_3-数据库命令","children":[]},{"level":3,"title":"4. 集合命令","slug":"_4-集合命令","link":"#_4-集合命令","children":[]},{"level":3,"title":"5. 文档命令","slug":"_5-文档命令","link":"#_5-文档命令","children":[]},{"level":3,"title":"6. 命令汇总","slug":"_6-命令汇总","link":"#_6-命令汇总","children":[]},{"level":3,"title":"7. 应用场景","slug":"_7-应用场景","link":"#_7-应用场景","children":[]}]},{"level":2,"title":"三、Mongoose","slug":"三、mongoose","link":"#三、mongoose","children":[{"level":3,"title":"1. 介绍","slug":"_1-介绍","link":"#_1-介绍","children":[]},{"level":3,"title":"2. 安装","slug":"_2-安装","link":"#_2-安装","children":[]},{"level":3,"title":"3. 使用流程","slug":"_3-使用流程","link":"#_3-使用流程","children":[]},{"level":3,"title":"4. 字段类型","slug":"_4-字段类型","link":"#_4-字段类型","children":[]},{"level":3,"title":"5. 字段值验证","slug":"_5-字段值验证","link":"#_5-字段值验证","children":[]},{"level":3,"title":"6. CURD","slug":"_6-curd","link":"#_6-curd","children":[]},{"level":3,"title":"7. 条件控制","slug":"_7-条件控制","link":"#_7-条件控制","children":[]},{"level":3,"title":"8. 个性化读取","slug":"_8-个性化读取","link":"#_8-个性化读取","children":[]},{"level":3,"title":"9. 模块化","slug":"_9-模块化","link":"#_9-模块化","children":[]}]},{"level":2,"title":"四、图形化管理工具","slug":"四、图形化管理工具","link":"#四、图形化管理工具","children":[]}],"git":{"createdTime":1710854012000,"updatedTime":1710854012000,"contributors":[{"name":"dachao","email":"1114686398@qq.com","commits":1}]},"readingTime":{"minutes":10.89,"words":3267},"filePathRelative":"Server/mongodb/mongodb.md","localizedDate":"2024年3月19日","excerpt":"<h2>一、简介</h2>\\n<h3>1. Mongodb 是什么</h3>\\n<blockquote>\\n<p>MongoDB 是一个基于分布式文件存储的数据库，官方地址 https://www.mongodb.com/</p>\\n</blockquote>\\n<h3>2. 数据库是什么</h3>\\n<p>数据库（DataBase）是按照数据结构来组织、存储和管理数据的 <code>应用程序</code></p>\\n<h3>3. 数据库的作用</h3>\\n<p>数据库的主要作用就是 <code>管理数据</code>，对数据进行 <code>增（c）、删（d）、改（u）、查（r）</code></p>\\n<h3>4. 数据库管理数据的特点</h3>","autoDesc":true}');export{_ as comp,M as data};
