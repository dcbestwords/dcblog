import{_ as e}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,b as r,o as l}from"./app-DKj0fT3n.js";const i="/dcblog/assets/16807529096431-DAYJMx6c.jpg",p={};function T(a,t){return l(),o("div",null,t[0]||(t[0]=[r('<h1 id="https-协议" tabindex="-1"><a class="header-anchor" href="#https-协议"><span>HTTPS 协议</span></a></h1><p>HTTPS （全称：Hypertext Transfer Protocol Secure），是以安全为目标的 HTTP 通道，在 HTTP 的基础上通过传输加密和身份认证保证了传输过程的安全性。HTTPS 在 HTTP 的基础上加入 SSL，HTTPS 的安全基础是 SSL，因此加密的详细内容就需要 SSL。</p><blockquote><p>SSL（Secure Sockets Layer），安全套接字协议 TLS（Transport Layer Security），传输层安全性协议 <strong>TLS 是 SSL 的升级版，两者几乎是一样的</strong> &gt; <strong>所以简单来说 HTTPS = HTTP + SSL/TLS</strong></p></blockquote><figure><img src="'+i+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>有这么一个漫画描述 HTTPS 比较的浅显易懂：<a href="https://blog.csdn.net/bjweimengshu/article/details/87706654" target="_blank" rel="noopener noreferrer">漫画：什么是 HTTPS 协议？</a></p><h1 id="面试题" tabindex="-1"><a class="header-anchor" href="#面试题"><span>面试题</span></a></h1><ol><li><p>介绍下 HTTPS 中间人攻击</p><blockquote><p>参考答案：</p><p>针对 HTTPS 攻击主要有 SSL 劫持攻击和 SSL 剥离攻击两种。</p><p>SSL 劫持攻击是指攻击者劫持了客户端和服务器之间的连接，将服务器的合法证书替换为伪造的证书，从而获取客户端和服务器之间传递的信息。这种方式一般容易被用户发现，浏览器会明确的提示证书错误，但某些用户安全意识不强，可能会点击继续浏览，从而达到攻击目的。</p><p>SSL 剥离攻击是指攻击者劫持了客户端和服务器之间的连接，攻击者保持自己和服务器之间的 HTTPS 连接，但发送给客户端普通的 HTTP 连接，由于 HTTP 连接是明文传输的，即可获取客户端传输的所有明文数据。</p></blockquote></li><li><p>介绍 HTTPS 握手过程</p><blockquote><p>参考答案：</p><ol><li>客户端请求服务器，并告诉服务器自身支持的加密算法以及密钥长度等信息</li><li>服务器响应公钥和服务器证书</li><li>客户端验证证书是否合法，然后生成一个会话密钥，并用服务器的公钥加密密钥，把加密的结果通过请求发送给服务器</li><li>服务器使用私钥解密被加密的会话密钥并保存起来，然后使用会话密钥加密消息响应给客户端，表示自己已经准备就绪</li><li>客户端使用会话密钥解密消息，知道了服务器已经准备就绪。</li><li>后续客户端和服务器使用会话密钥加密信息传递消息</li></ol></blockquote></li><li><p>HTTPS 握手过程中，客户端如何验证证书的合法性</p><blockquote><p>参考答案：</p><ol><li>校验证书的颁发机构是否受客户端信任。</li><li>通过 CRL 或 OCSP 的方式校验证书是否被吊销。</li><li>对比系统时间，校验证书是否在有效期内。</li><li>通过校验对方是否存在证书的私钥，判断证书的网站域名是否与证书颁发的域名一致。</li></ol></blockquote></li><li><p>阐述 https 验证身份也就是 TSL/SSL 身份验证的过程</p><blockquote><p>参考答案：</p><ol><li>客户端请求服务器，并告诉服务器自身支持的加密算法以及密钥长度等信息</li><li>服务器响应公钥和服务器证书</li><li>客户端验证证书是否合法，然后生成一个会话密钥，并用服务器的公钥加密密钥，把加密的结果通过请求发送给服务器</li><li>服务器使用私钥解密被加密的会话密钥并保存起来，然后使用会话密钥加密消息响应给客户端，表示自己已经准备就绪</li><li>客户端使用会话密钥解密消息，知道了服务器已经准备就绪。</li><li>后续客户端和服务器使用会话密钥加密信息传递消息</li></ol></blockquote></li><li><p>为什么需要 CA 机构对证书签名</p><blockquote><p>主要是为了解决证书的可信问题。如果没有权威机构对证书进行签名，客户端就无法知晓证书是否是伪造的，从而增加了中间人攻击的风险，https 就变得毫无意义。</p></blockquote></li><li><p>如何劫持 https 的请求，提供思路</p><blockquote><p>https 有防篡改的特点，只要浏览器证书验证过程是正确的，很难在用户不察觉的情况下进行攻击。但若能够更改浏览器的证书验证过程，便有机会实现 https 中间人攻击。</p><p>所以，要劫持 https，首先要伪造一个证书，并且要想办法让用户信任这个证书，可以有多种方式，比如病毒、恶意软件、诱导等。一旦证书被信任后，就可以利用普通中间人攻击的方式，使用伪造的证书进行攻击。</p></blockquote></li></ol>',7)]))}const n=e(p,[["render",T],["__file","HTTPS协议.html.vue"]]),s=JSON.parse('{"path":"/browser_internet/network/cyber_security/HTTPS%E5%8D%8F%E8%AE%AE.html","title":"HTTPS 协议","lang":"zh-CN","frontmatter":{"order":4,"category":["前端"],"tag":["网络安全","https"],"description":"HTTPS 协议 HTTPS （全称：Hypertext Transfer Protocol Secure），是以安全为目标的 HTTP 通道，在 HTTP 的基础上通过传输加密和身份认证保证了传输过程的安全性。HTTPS 在 HTTP 的基础上加入 SSL，HTTPS 的安全基础是 SSL，因此加密的详细内容就需要 SSL。 SSL（Secure S...","head":[["meta",{"property":"og:url","content":"https://github.com/dcblog/browser_internet/network/cyber_security/HTTPS%E5%8D%8F%E8%AE%AE.html"}],["meta",{"property":"og:site_name","content":"dcBlog"}],["meta",{"property":"og:title","content":"HTTPS 协议"}],["meta",{"property":"og:description","content":"HTTPS 协议 HTTPS （全称：Hypertext Transfer Protocol Secure），是以安全为目标的 HTTP 通道，在 HTTP 的基础上通过传输加密和身份认证保证了传输过程的安全性。HTTPS 在 HTTP 的基础上加入 SSL，HTTPS 的安全基础是 SSL，因此加密的详细内容就需要 SSL。 SSL（Secure S..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-12-03T11:20:13.000Z"}],["meta",{"property":"article:tag","content":"网络安全"}],["meta",{"property":"article:tag","content":"https"}],["meta",{"property":"article:modified_time","content":"2024-12-03T11:20:13.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"HTTPS 协议\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-12-03T11:20:13.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dachao\\",\\"email\\":\\"wyc168hard@163.com\\"}]}"]]},"headers":[],"git":{"createdTime":1710854012000,"updatedTime":1733224813000,"contributors":[{"name":"dachao","email":"1114686398@qq.com","commits":2}]},"readingTime":{"minutes":3.96,"words":1188},"filePathRelative":"browser_internet/network/cyber_security/HTTPS协议.md","localizedDate":"2024年3月19日","excerpt":"\\n<p>HTTPS （全称：Hypertext Transfer Protocol Secure），是以安全为目标的 HTTP 通道，在 HTTP 的基础上通过传输加密和身份认证保证了传输过程的安全性。HTTPS 在 HTTP 的基础上加入 SSL，HTTPS 的安全基础是 SSL，因此加密的详细内容就需要 SSL。</p>","autoDesc":true}');export{n as comp,s as data};
