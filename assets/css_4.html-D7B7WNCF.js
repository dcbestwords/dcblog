import{_ as i}from"./plugin-vue_export-helper-DlAUqK2U.js";import{c as o,e as s,a as n,b as a,d as t,o as p,r as c}from"./app-DWSfyW7-.js";const r="/dcblog/assets/yuanjiao-Y0Jsi8nk.png",d="/dcblog/assets/16544127811786-BwJCrbGY.jpg",u="/dcblog/assets/16544133667087-un1MxCFF.jpg",g="/dcblog/assets/16544264148039-Bhgq2-fC.jpg",m="/dcblog/assets/16544264304568-joG1xEpe.jpg",h="/dcblog/assets/16544211161999-G_yJNE1z.jpg",f="/dcblog/assets/gradient-B2p5wh8e.png",k="/dcblog/assets/Radial-gradient-DUaCyFFX.png",b={},v={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/text-shadow",target:"_blank",rel:"noopener noreferrer"},x={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/transform-origin",target:"_blank",rel:"noopener noreferrer"},_={href:"https://fontawesome.com/",target:"_blank",rel:"noopener noreferrer"},y={class:"hint-container tip"},z={href:"https://zhuanlan.zhihu.com/p/438121005",target:"_blank",rel:"noopener noreferrer"},w={href:"https://mdn.github.io/learning-area/css/styling-boxes/backgrounds/background-attachment.html",target:"_blank",rel:"noopener noreferrer"},q={href:"https://developer.mozilla.org/zh-CN/docs/Web/CSS/linear-gradient()",target:"_blank",rel:"noopener noreferrer"};function C(S,e){const l=c("ExternalLinkIcon");return p(),o("div",null,[e[20]||(e[20]=s('<hr><h2 id="一、视觉类样式" tabindex="-1"><a class="header-anchor" href="#一、视觉类样式"><span>一、视觉类样式</span></a></h2><blockquote><p>所谓视觉类样式，是指不影响 <mark>盒子位置、尺寸</mark> 的样式，例如文字颜色、背景颜色、背景图片等</p></blockquote><h3 id="_1-默认样式" tabindex="-1"><a class="header-anchor" href="#_1-默认样式"><span>1. 默认样式</span></a></h3><p>通常情况，浏览器都会为元素设置一些默认样式，这些样式的存在会影响到页面的布局，一般我们编写网页时必须要去除浏览器的默认样式（PC端的页面）</p><p>重置样式表：专门用来对浏览器的样式进行重置的</p><ul><li><code>reset.css</code> 直接去除了浏览器的默认样式</li><li><code>normalize.css</code> 对默认样式进行了统一</li></ul><h3 id="_2-轮廓" tabindex="-1"><a class="header-anchor" href="#_2-轮廓"><span>2. 轮廓</span></a></h3><p><code>outline</code> 用来设置元素的轮廓线，用法和border一模一样</p><ul><li>轮廓和边框不同的点，就是轮廓不会影响到可见框的大小</li></ul><h3 id="_3-圆角" tabindex="-1"><a class="header-anchor" href="#_3-圆角"><span>3. 圆角</span></a></h3><p><code>border-radius</code>: 用来设置圆角 （圆角设置的圆的半径大小）</p><ul><li><p><code>border-radius</code> 可以分别指定四个角的圆角</p><ul><li>四个值： 左上 右上 右下 左下</li><li>三个值： 左上 右上/左下 右下</li><li>两个值： 左上/右下 右上/左下</li></ul></li><li><p><code>border-radius: 20px 50%;</code></p></li></ul><figure><img src="'+r+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li>将元素设置为一个圆形：<code>border-radius: 50%;</code></li></ul><h3 id="_4-盒子阴影" tabindex="-1"><a class="header-anchor" href="#_4-盒子阴影"><span>4. 盒子阴影</span></a></h3><p><code>box-shadow</code> 用来设置元素的阴影效果，阴影不会影响页面布局</p><ul><li><p>第一个值 水平偏移量 设置阴影的水平位置 正值向右移动 负值向左移动</p></li><li><p>第二个值 垂直偏移量 设置阴影的水平位置 正值向下移动 负值向上移动</p></li><li><p>第三个值 阴影的模糊半径</p></li><li><p>第四个值 阴影的扩散半径</p></li><li><p>可选值：<code>inset、&lt;color&gt;</code></p></li><li><p><code>box-shadow: 0px 0px 50px rgba(0, 0, 0, .3) ;</code></p></li></ul><figure><img src="'+d+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_5-文字阴影" tabindex="-1"><a class="header-anchor" href="#_5-文字阴影"><span>5. 文字阴影</span></a></h3>',20)),n("blockquote",null,[n("p",null,[n("a",v,[e[0]||(e[0]=a("MDN详细文档")),t(l)])])]),e[21]||(e[21]=s('<p>通过<code>text-shadow</code>可以设置文字阴影</p><p>下面是一些示例</p><figure><img src="'+u+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h2 id="二、-变形-transform" tabindex="-1"><a class="header-anchor" href="#二、-变形-transform"><span>二、 变形（transform）</span></a></h2><p>变形就是指通过CSS来改变元素的形状或位置，它不会影响到页面的布局。</p><h3 id="_1-translate-平移" tabindex="-1"><a class="header-anchor" href="#_1-translate-平移"><span>1. translate 平移</span></a></h3><p>transform 用来设置元素的变形效果 <code> transform: translateX(100%);</code></p><ul><li><code>translateX()</code> 沿着x轴方向平移</li><li><code>translateY()</code> 沿着y轴方向平移</li><li><code>translateZ()</code> 沿着z轴方向平移</li><li>当平移单位为百分比时，其百分比相对于自身进行计算</li></ul><figure><img src="'+g+`" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p>其中z轴平移比较特殊，正常情况下z轴平移指的是调整元素在z轴的位置，即调整元素和人眼之间的距离，距离越大，元素离人越近。但因为z轴平移属于立体效果（近大远小），而默认情况下网页不支持透视，如果想要看见效果，则必须要设置网页的视距。</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">body</span><span class="token punctuation">{</span>
      <span class="token comment">/* 设置当前网页的视距为800px，人眼距离网页的距离 */</span>
     <span class="token property">perspective</span><span class="token punctuation">:</span> 800px<span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container warning"><p class="hint-container-title">警告</p><p>原版视频中是在html标签上添加的perspective，经验证现已失效，设置给body则显示正常。 查阅文档之后，文档中给出了另一种设置方式：<code>transform: perspective(500px) translateZ(200px);</code></p></div><h3 id="_2-rotate-旋转" tabindex="-1"><a class="header-anchor" href="#_2-rotate-旋转"><span>2. rotate 旋转</span></a></h3><p>通过旋转可以使元素沿着x y 或 z旋转指定的角度 <code> transform: rotateY(180deg);</code></p><ul><li><code>rotateX()、rotateY()、rotateZ()</code></li><li><code>backface-visibility: hidden</code>;(是否显示元素的背面)</li><li>与上同理，在进行x、y轴的旋转时，为了显示出3d的效果，需要设置<code>perspective</code></li></ul><h3 id="_3-scale-缩放" tabindex="-1"><a class="header-anchor" href="#_3-scale-缩放"><span>3. scale 缩放</span></a></h3><p>对元素进行缩放的函数 <code>transform:scale(2)</code></p><ul><li>scaleX() 水平方向缩放、scaleY() 垂直方向缩放、 scale() 双方向的缩放</li></ul><figure><img src="`+m+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><h3 id="_4-改变变形原点" tabindex="-1"><a class="header-anchor" href="#_4-改变变形原点"><span>4. 改变变形原点</span></a></h3>',20)),n("blockquote",null,[n("p",null,[n("a",x,[e[1]||(e[1]=a("MDN详细文档")),t(l)])])]),e[22]||(e[22]=s(`<p>变形原点的位置，会影响到具体的变形行为</p><p>默认情况下， <mark>变形的原点在盒子中心</mark>，你可以通过<code>transform-origin</code>来改变它</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token property">transform-origin</span><span class="token punctuation">:</span> center<span class="token punctuation">;</span> <span class="token comment">/* 设置原点在盒子中心 */</span>
<span class="token property">transform-origin</span><span class="token punctuation">:</span> left top<span class="token punctuation">;</span> <span class="token comment">/* 设置原点在盒子左上角 */</span>
<span class="token property">transform-origin</span><span class="token punctuation">:</span> right bottom<span class="token punctuation">;</span> <span class="token comment">/* 设置原点在盒子右下角 */</span>
<span class="token property">transform-origin</span><span class="token punctuation">:</span> 30px 60px<span class="token punctuation">;</span> <span class="token comment">/* 设置原点在盒子坐标 (30, 60) 位置 */</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">提示</p><p>为了使变形的效果更加平滑，一般情况下我们会为进行变形的元素添加<code>transition</code>（过渡）效果</p></div><h2 id="三、字体" tabindex="-1"><a class="header-anchor" href="#三、字体"><span>三、字体</span></a></h2><h3 id="_1-字体相关的样式" tabindex="-1"><a class="header-anchor" href="#_1-字体相关的样式"><span>1. 字体相关的样式</span></a></h3><ul><li><p><code>color</code> 用来设置字体的颜色</p></li><li><p><code>font-size</code> 字体的大小</p><ul><li>单位：px、em（相当于当前元素的一个font-size）、rem （相对于根元素的一个font-size）</li></ul></li><li><p><code>font-weight</code> 字重 字体的加粗</p><ul><li>normal （默认值 不加粗） 、bold （加粗）、100-900 九个级别（没什么用）</li></ul></li><li><p><code>font-style</code> 字体的风格</p><ul><li>normal 正常的、italic 斜体</li></ul></li><li><p><code>font-family</code> 字体族（字体的格式）</p><ul><li><p>可选值：serif（衬线字体）、sans-serif（ 非衬线字体）、 monospace（等宽字体）</p></li><li><p>指定字体的类别，浏览器会自动使用该类别下的字体，一般情况下上述字体作为字体族最后一个作为兜底。</p></li><li><p>font-family 可以同时指定多个字体，多个字体间使用<code>,</code>隔开，字体生效时优先使用第一个，第一个无法使用则使用第二个，以此类推。</p></li><li><p>当指定用户电脑上并未安装的字体时，其不会生效，通过下述属性使用户可以直接使用服务器中的字体。</p></li><li><p>用户电脑会先将服务器中指定的字体下载，存在一定的网络问题，若网速比较慢，则网页的字体一开始不会正确显示。</p></li><li><p><code>font-face</code>指定的字体提供给用户使用，要注意受到了授权。</p></li></ul><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token atrule"><span class="token rule">@font-face</span></span> <span class="token punctuation">{</span>
	<span class="token comment">/* 指定字体的名字 */</span>
	<span class="token property">font-family</span><span class="token punctuation">:</span><span class="token string">&#39;myfont&#39;</span> <span class="token punctuation">;</span>
	<span class="token comment">/* 服务器中字体的路径 */</span>
	<span class="token property">src</span><span class="token punctuation">:</span> <span class="token url"><span class="token function">url</span><span class="token punctuation">(</span><span class="token string url">&#39;./font/ZCOOLKuaiLe-Regular.ttf&#39;</span><span class="token punctuation">)</span></span> <span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;truetype&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
	<span class="token comment">/* format(&quot;truetype&quot;) 保险措施，一般情况下系统可以自动识别 */</span>
<span class="token punctuation">}</span>
<span class="token selector">p</span><span class="token punctuation">{</span>
    <span class="token property">font-family</span><span class="token punctuation">:</span> myfont
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><div class="hint-container warning"><p class="hint-container-title">注意</p><p>要注意所使用字体的版权问题！</p></div><ul><li><p>行高（line height），行高指的是文字占有的实际高度，可以通过<code>line-height</code>来设置行高。</p><ul><li><p>行高可以直接指定一个大小（px、em），也可以直接为行高设置一个整数，如果是一个整数的话，行高将会是字体大小的指定倍数。</p></li><li><p>行高经常还用来设置文字的行间距：<code>行间距 = 行高 - 字体大小</code></p></li><li><p>我们可以<strong>将行高设置为和高度一样的值</strong>，使单行文字在一个元素中垂直居中</p></li></ul></li><li><p>字体框</p><ul><li><p>字体框就是字体存在的格子，设置<code>font-size</code>实际上就是在设置字体框的高度</p></li><li><p>行高会在字体框的上下平均分配</p></li></ul></li><li><p><strong>字体的简写属性</strong>，font 可以设置字体相关的所有属性</p><ul><li><p>font: 字体大小/行高 字体族（行高可以省略不写，如果不写使用默认值）</p></li><li><p>示例：<code>font: bold italic 50px/2 微软雅黑, &#39;Times New Roman&#39;, Times, serif;</code></p></li></ul></li></ul><h3 id="_2-图标字体-iconfont" tabindex="-1"><a class="header-anchor" href="#_2-图标字体-iconfont"><span>2. 图标字体（iconfont）</span></a></h3><p>在网页中经常需要使用一些图标，可以通过图片来引入图标，但是图片大小本身比较大，并且非常的不灵活（颜色、大小）。所以在使用图标时，我们还可以将图标直接设置为字体， 然后通过<code>font-face</code>的形式来对字体进行引入，这样我们就可以通过使用字体的形式来使用图标。</p><h4 id="fontawesome" tabindex="-1"><a class="header-anchor" href="#fontawesome"><span>fontawesome</span></a></h4>`,12)),n("p",null,[e[3]||(e[3]=a("fontawesome是一个公共的图标字体库，我们要想使用它，首先要在")),n("a",_,[e[2]||(e[2]=a("官网")),t(l)]),e[4]||(e[4]=a("（英文官网，中文官网版本比较旧）下载字体库，解压到本地之后，文档中存在很多文件，我们只需要将")),e[5]||(e[5]=n("code",null,"css",-1)),e[6]||(e[6]=a("和")),e[7]||(e[7]=n("code",null,"webfonts",-1)),e[8]||(e[8]=a("移动到项目中的同一目录下。然后将")),e[9]||(e[9]=n("code",null,"all.css",-1)),e[10]||(e[10]=a("或者")),e[11]||(e[11]=n("code",null,"all.min.css",-1)),e[12]||(e[12]=a("引入到网页中")),e[13]||(e[13]=n("code",null,'<link rel="stylesheet" href="./fa/css/all.css">',-1)),e[14]||(e[14]=a("，之后直接使用图标字体即可。"))]),e[23]||(e[23]=s(`<p><strong>使用方式：</strong></p><ul><li><p>直接通过类名使用图标字体</p><div class="language-html line-numbers-mode" data-ext="html" data-title="html"><pre class="language-html"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fas fa-bell-slash<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>i</span> <span class="token attr-name">class</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>fab fa-accessible-icon<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>i</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p><code>fa-bell-slash</code>属于图标字体名（同上面font-face定义内容），前面是<code>fas</code>或者<code>fab</code>（同上面p定义内容，将图标字体指定为字体族，只有这两种免费使用），将如果其中一种不生效记得换另一种试试。</p></li><li><p>通过实体来使用图标字体</p><p><code>&lt;span class=&quot;fas&quot;&gt;&amp;#xf0f3;&lt;/span&gt;</code> 其中f0f3为字体的编码。</p></li><li><p>通过伪元素来设置图标字体</p><ol><li><p>找到要设置图标的元素通过before或after选中</p></li><li><p>在content中设置字体的编码（通过文档查看）</p></li><li><p>设置字体的样式</p><ul><li><p>fab：font-family: &#39;Font Awesome 5 Brands&#39;;</p></li><li><p>fas： font-family: &#39;Font Awesome 5 Free&#39;;</p><p>​ font-weight: 900;</p></li></ul></li></ol><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token selector">li::before</span><span class="token punctuation">{</span>
      <span class="token property">content</span><span class="token punctuation">:</span> <span class="token string">&#39;\\f1b0&#39;</span><span class="token punctuation">;</span>
      <span class="token comment">/* font-family: &#39;Font Awesome 5 Brands&#39;; */</span>
      <span class="token property">font-family</span><span class="token punctuation">:</span> <span class="token string">&#39;Font Awesome 5 Free&#39;</span><span class="token punctuation">;</span>
      <span class="token property">font-weight</span><span class="token punctuation">:</span> 900<span class="token punctuation">;</span> 
      <span class="token property">color</span><span class="token punctuation">:</span> blue<span class="token punctuation">;</span>
      <span class="token property">margin-right</span><span class="token punctuation">:</span> 10px<span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></li></ul><h4 id="阿里的字体库-iconfont" tabindex="-1"><a class="header-anchor" href="#阿里的字体库-iconfont"><span>阿里的字体库（iconfont）</span></a></h4>`,3)),n("div",y,[e[17]||(e[17]=n("p",{class:"hint-container-title"},"参考",-1)),n("p",null,[e[16]||(e[16]=a("查看字体库下载过程和使用方式: ")),n("a",z,[e[15]||(e[15]=a("https://zhuanlan.zhihu.com/p/438121005")),t(l)])])]),e[24]||(e[24]=s('<h3 id="_3-文本样式" tabindex="-1"><a class="header-anchor" href="#_3-文本样式"><span>3. 文本样式</span></a></h3><ul><li><p><code>text-align</code></p><p>文本的水平对齐，可选值：</p><ul><li><p><code>left</code> 左侧对齐</p></li><li><p><code>right</code> 右对齐</p></li><li><p><code>center</code> 居中对齐</p></li><li><p><code>justify</code> 两端对齐</p></li></ul></li><li><p><code>vertical-align</code></p><p>元素垂直对齐的方式。可选值：</p><ul><li><code>baseline</code> 默认值 基线对齐</li><li><code>top</code> 顶部对齐</li><li><code>bottom</code> 底部对齐</li><li><code>middle</code> 居中对齐</li></ul></li><li><p><code>text-decoration</code></p><p>设置文本修饰，可选值：</p><ul><li><code>none</code> 什么都没有</li><li><code>underline</code> 下划线</li><li><code>line-through</code> 删除线</li><li><code>overline</code> 上划线</li></ul></li><li><p><code>white-space</code></p><p>设置网页如何处理空白。可选值：</p><ul><li><code>normal</code> 正常（当文字超过父元素设置的宽度时，自动换行）</li><li><code>nowrap</code> 不换行</li><li><code>pre</code> 保留空白</li></ul></li></ul><hr><h2 id="四、背景" tabindex="-1"><a class="header-anchor" href="#四、背景"><span>四、背景</span></a></h2><h3 id="_1-背景颜色" tabindex="-1"><a class="header-anchor" href="#_1-背景颜色"><span>1. 背景颜色</span></a></h3><p><code>background-color: #bfa;</code></p><ul><li>背景颜色可以延伸至元素的内容和内边距盒子的下面</li></ul><h3 id="_2-背景图片" tabindex="-1"><a class="header-anchor" href="#_2-背景图片"><span>2. 背景图片</span></a></h3><p><code>background-image: url(&quot;./img/1.png&quot;);</code></p><ul><li>可以同时设置背景图片和背景颜色，这样背景颜色将会成为图片的 <mark>背景色</mark></li><li>如果背景的图片小于元素，则背景图片会自动在元素中 <mark>平铺</mark> 将元素铺满</li><li>如果背景的图片大于元素，将会有部分背景无法完全显示（大图不会缩小以适应盒子）</li><li>如果背景图片和元素一样大，则会直接正常显示</li></ul><h3 id="_3-控制背景平铺行为" tabindex="-1"><a class="header-anchor" href="#_3-控制背景平铺行为"><span>3. 控制背景平铺行为</span></a></h3><p><code>background-repeat: no-repeat;</code></p><ul><li><code>repeat</code> 默认值 ， 背景会沿着x轴 y轴双方向重复平铺</li><li><code>repeat-x</code> 沿着x轴方向重复平铺</li><li><code>repeat-y</code> 沿着y轴方向重复平铺</li><li><code>no-repeat</code> 阻止背景重复平铺</li></ul><h3 id="_4-背景图片的位置" tabindex="-1"><a class="header-anchor" href="#_4-背景图片的位置"><span>4. 背景图片的位置</span></a></h3><p><code> background-position: -50px 300px;</code></p><ul><li>通过 <code>top left right bottom center</code> 几个表示方位的词来设置背景图片的位置 <ul><li>使用方位词时必须要同时指定两个值，如果只写一个则第二个默认就是<code>center</code></li></ul></li><li>通过 <mark>偏移量</mark> 来指定背景图片的位置 <ul><li>水平方向的偏移量、垂直方向变量</li></ul></li></ul><h3 id="_5-背景图片的偏移量计算的原点" tabindex="-1"><a class="header-anchor" href="#_5-背景图片的偏移量计算的原点"><span>5. 背景图片的偏移量计算的原点</span></a></h3><p><code>background-origin: border-box;</code></p><ul><li><code>padding-box</code> 默认值，<code>background-position</code>从内边距处开始计算</li><li><code>content-box</code> 背景图片的偏移量从 <mark>内容区</mark> 处计算</li><li><code>border-box</code> 背景图片的偏移量从 <mark>边框</mark> 处开始计算</li></ul><h3 id="_6-背景的范围" tabindex="-1"><a class="header-anchor" href="#_6-背景的范围"><span>6. 背景的范围</span></a></h3><p><code>background-clip: content-box;</code></p><ul><li><code>border-box</code> 默认值，背景会出现在边框的下边</li><li><code>padding-box</code> 背景不会出现在边框，只出现在内容区和内边距</li><li><code>content-box</code> 背景只会出现在内容区</li></ul><h3 id="_7-背景图片的大小" tabindex="-1"><a class="header-anchor" href="#_7-背景图片的大小"><span>7. 背景图片的大小</span></a></h3><p><code>background-size: contain;</code></p><ul><li><p>可以设置 <mark>长度</mark> 或 <mark>百分比值</mark></p></li><li><p>第一个值表示宽度 ,第二个值表示高度,如果只写一个，则第二个值默认是 auto</p></li><li><p><code>cover</code> 图片的比例不变，将元素铺满，在这种情况下，图像的部分区域可能会跳出盒子外。</p></li><li><p><code>contain</code> 图片比例不变，将图片在元素中完整显示，在这种情况下，如果图像的长宽比与盒子的长宽比不同，你可能会在图像的两边或顶部和底部出现空隙。</p></li></ul><h3 id="_8-背景图片是否跟随元素移动" tabindex="-1"><a class="header-anchor" href="#_8-背景图片是否跟随元素移动"><span>8. 背景图片是否跟随元素移动</span></a></h3><p><code>background-attachment: fixed;</code></p><ul><li><code>scroll</code> 默认值 背景图片会跟随元素移动</li><li><code>fixed</code> 背景会固定在页面中，不会随元素移动</li><li><code>local</code>：将背景固定在它所设置的元素上，所以当你滚动该元素时，背景也随之滚动。</li></ul>',28)),n("p",null,[n("a",w,[e[18]||(e[18]=a("查看实际效果")),t(l)])]),e[25]||(e[25]=s('<h3 id="_9-背景相关的简写属性" tabindex="-1"><a class="header-anchor" href="#_9-背景相关的简写属性"><span>9. 背景相关的简写属性</span></a></h3><ul><li><code> background: url(&#39;./img/2.jpg&#39;) #bfa center center/contain border-box content-box no-repeat ;</code><ul><li>所有背景相关的样式都可以通过该样式来设置 ,并且该样式没有顺序要求，也没有哪个属性是必须写的</li><li><code>background-size</code>必须写在<code>background-position</code>的后边，并且使用<code>/</code>隔开</li><li><code>background-origin background-clip</code> 两个样式 ，<code>orgin</code>要在<code>clip</code>的前边</li></ul></li></ul><h3 id="_10-渐变" tabindex="-1"><a class="header-anchor" href="#_10-渐变"><span>10. 渐变</span></a></h3>',3)),n("blockquote",null,[n("p",null,[n("a",q,[e[19]||(e[19]=a("MDN详细文档")),t(l)])])]),e[26]||(e[26]=s(`<p>在设置 <mark>背景图片</mark> 时，除了可以使用<code>url()</code>加载一张背景图，还可以使用<code>linear-gradient()</code>函数设置背景渐变</p><p><code>linear-gradient()</code>用于创建一张渐变的图片，语法为：</p><div class="language-css line-numbers-mode" data-ext="css" data-title="css"><pre class="language-css"><code><span class="token property">background-image</span><span class="token punctuation">:</span> <span class="token function">linear-gradient</span><span class="token punctuation">(</span>to bottom<span class="token punctuation">,</span> #e66465<span class="token punctuation">,</span> #9198e5<span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><figure><img src="`+h+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><p><code> background-image: repeating-linear-gradient(to right ,red, yellow 50px);</code></p><ul><li>通过渐变可以设置一些复杂的背景颜色，可以实现从一个颜色向其他颜色过渡的效果</li><li>渐变是图片，需要通过<code>background-image</code>来设置</li><li><code>linear-gradient()</code> --线性渐变，颜色沿着一条直线发生变化</li><li><code>repeating-linear-gradient()-</code>-可以平铺的线性渐变</li><li>渐变可以同时指定多个颜色，多个颜色默认情况下平均分布，也可以手动指定渐变的分布情况，指定颜色分布的起始位置</li><li>线性渐变的开头，我们可以指定一个渐变的方向(to left、to right等)</li></ul><figure><img src="'+f+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure><ul><li><p><code> background-image: radial-gradient(farthest-corner at 100px 100px, red , #bfa)</code></p><ul><li>径向渐变(放射性的效果)， 默认情况下径向渐变的形状根据元素的形状来计算的，正方形 --&gt; 圆形，长方形 --&gt; 椭圆形</li><li>我们也可以自己指定渐变的位置。radial-gradient(大小 at 位置, 颜色 位置 ,颜色 位置 ,颜色 位置) <ul><li>大小： circle 圆形、 ellipse 椭圆、closest-side 近边 、 closest-corner 近角、farthest-side 远边、farthest-corner 远角</li><li>位置： top right left center bottom</li></ul></li></ul><figure><img src="'+k+'" alt="" tabindex="0" loading="lazy"><figcaption></figcaption></figure></li></ul>',8))])}const F=i(b,[["render",C],["__file","css_4.html.vue"]]),B=JSON.parse('{"path":"/basic_language/CSS/css_4.html","title":"css视觉样式","lang":"zh-CN","frontmatter":{"title":"css视觉样式","icon":"style","order":4,"category":["CSS"],"tag":["阴影","transform","字体","背景"],"description":"一、视觉类样式 所谓视觉类样式，是指不影响 盒子位置、尺寸 的样式，例如文字颜色、背景颜色、背景图片等 1. 默认样式 通常情况，浏览器都会为元素设置一些默认样式，这些样式的存在会影响到页面的布局，一般我们编写网页时必须要去除浏览器的默认样式（PC端的页面） 重置样式表：专门用来对浏览器的样式进行重置的 reset.css 直接去除了浏览器的默认样式 ...","head":[["meta",{"property":"og:url","content":"https://github.com/dcblog/basic_language/CSS/css_4.html"}],["meta",{"property":"og:site_name","content":"dcBlog"}],["meta",{"property":"og:title","content":"css视觉样式"}],["meta",{"property":"og:description","content":"一、视觉类样式 所谓视觉类样式，是指不影响 盒子位置、尺寸 的样式，例如文字颜色、背景颜色、背景图片等 1. 默认样式 通常情况，浏览器都会为元素设置一些默认样式，这些样式的存在会影响到页面的布局，一般我们编写网页时必须要去除浏览器的默认样式（PC端的页面） 重置样式表：专门用来对浏览器的样式进行重置的 reset.css 直接去除了浏览器的默认样式 ..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2024-03-20T08:14:58.000Z"}],["meta",{"property":"article:author","content":"Dachao"}],["meta",{"property":"article:tag","content":"阴影"}],["meta",{"property":"article:tag","content":"transform"}],["meta",{"property":"article:tag","content":"字体"}],["meta",{"property":"article:tag","content":"背景"}],["meta",{"property":"article:modified_time","content":"2024-03-20T08:14:58.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"css视觉样式\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-03-20T08:14:58.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"Dachao\\",\\"email\\":\\"wyc168hard@163.com\\"}]}"]]},"headers":[{"level":2,"title":"一、视觉类样式","slug":"一、视觉类样式","link":"#一、视觉类样式","children":[{"level":3,"title":"1. 默认样式","slug":"_1-默认样式","link":"#_1-默认样式","children":[]},{"level":3,"title":"2. 轮廓","slug":"_2-轮廓","link":"#_2-轮廓","children":[]},{"level":3,"title":"3. 圆角","slug":"_3-圆角","link":"#_3-圆角","children":[]},{"level":3,"title":"4. 盒子阴影","slug":"_4-盒子阴影","link":"#_4-盒子阴影","children":[]},{"level":3,"title":"5. 文字阴影","slug":"_5-文字阴影","link":"#_5-文字阴影","children":[]}]},{"level":2,"title":"二、 变形（transform）","slug":"二、-变形-transform","link":"#二、-变形-transform","children":[{"level":3,"title":"1. translate 平移","slug":"_1-translate-平移","link":"#_1-translate-平移","children":[]},{"level":3,"title":"2. rotate 旋转","slug":"_2-rotate-旋转","link":"#_2-rotate-旋转","children":[]},{"level":3,"title":"3. scale 缩放","slug":"_3-scale-缩放","link":"#_3-scale-缩放","children":[]},{"level":3,"title":"4. 改变变形原点","slug":"_4-改变变形原点","link":"#_4-改变变形原点","children":[]}]},{"level":2,"title":"三、字体","slug":"三、字体","link":"#三、字体","children":[{"level":3,"title":"1. 字体相关的样式","slug":"_1-字体相关的样式","link":"#_1-字体相关的样式","children":[]},{"level":3,"title":"2. 图标字体（iconfont）","slug":"_2-图标字体-iconfont","link":"#_2-图标字体-iconfont","children":[]},{"level":3,"title":"3. 文本样式","slug":"_3-文本样式","link":"#_3-文本样式","children":[]}]},{"level":2,"title":"四、背景","slug":"四、背景","link":"#四、背景","children":[{"level":3,"title":"1. 背景颜色","slug":"_1-背景颜色","link":"#_1-背景颜色","children":[]},{"level":3,"title":"2. 背景图片","slug":"_2-背景图片","link":"#_2-背景图片","children":[]},{"level":3,"title":"3. 控制背景平铺行为","slug":"_3-控制背景平铺行为","link":"#_3-控制背景平铺行为","children":[]},{"level":3,"title":"4. 背景图片的位置","slug":"_4-背景图片的位置","link":"#_4-背景图片的位置","children":[]},{"level":3,"title":"5. 背景图片的偏移量计算的原点","slug":"_5-背景图片的偏移量计算的原点","link":"#_5-背景图片的偏移量计算的原点","children":[]},{"level":3,"title":"6. 背景的范围","slug":"_6-背景的范围","link":"#_6-背景的范围","children":[]},{"level":3,"title":"7. 背景图片的大小","slug":"_7-背景图片的大小","link":"#_7-背景图片的大小","children":[]},{"level":3,"title":"8. 背景图片是否跟随元素移动","slug":"_8-背景图片是否跟随元素移动","link":"#_8-背景图片是否跟随元素移动","children":[]},{"level":3,"title":"9. 背景相关的简写属性","slug":"_9-背景相关的简写属性","link":"#_9-背景相关的简写属性","children":[]},{"level":3,"title":"10. 渐变","slug":"_10-渐变","link":"#_10-渐变","children":[]}]}],"git":{"createdTime":1710854012000,"updatedTime":1710922498000,"contributors":[{"name":"dachao","email":"1114686398@qq.com","commits":2}]},"readingTime":{"minutes":11.59,"words":3477},"filePathRelative":"basic_language/CSS/css_4.md","localizedDate":"2024年3月19日","excerpt":"<hr>\\n<h2>一、视觉类样式</h2>\\n<blockquote>\\n<p>所谓视觉类样式，是指不影响 <mark>盒子位置、尺寸</mark> 的样式，例如文字颜色、背景颜色、背景图片等</p>\\n</blockquote>\\n<h3>1. 默认样式</h3>\\n<p>通常情况，浏览器都会为元素设置一些默认样式，这些样式的存在会影响到页面的布局，一般我们编写网页时必须要去除浏览器的默认样式（PC端的页面）</p>\\n<p>重置样式表：专门用来对浏览器的样式进行重置的</p>\\n<ul>\\n<li><code>reset.css</code> 直接去除了浏览器的默认样式</li>\\n<li><code>normalize.css</code> 对默认样式进行了统一</li>\\n</ul>","autoDesc":true}');export{F as comp,B as data};
